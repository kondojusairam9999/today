{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinay\\\\Downloads\\\\Medicine_Prediction_App_Complete\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    age: 0,\n    gender: 1,\n    // 1 for male, 0 for female\n    bloodPressure: 120,\n    cholesterol: 200,\n    heartRate: 75,\n    diabetes: 0,\n    // 0 for no, 1 for yes\n    familyHistory: 0,\n    // 0 for no, 1 for yes\n    smoking: 0,\n    // 0 for no, 1 for yes\n    obesity: 0,\n    // 0 for no, 1 for yes\n    exerciseHours: 2\n  });\n  const [prediction, setPrediction] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const featureLabels = {\n    age: \"Age (years)\",\n    gender: \"Gender (1 for male, 0 for female)\",\n    bloodPressure: \"Blood Pressure (systolic)\",\n    cholesterol: \"Cholesterol Level (mg/dL)\",\n    heartRate: \"Heart Rate (bpm)\",\n    diabetes: \"Diabetes (0 for no, 1 for yes)\",\n    familyHistory: \"Family History (0 for no, 1 for yes)\",\n    smoking: \"Smoking (0 for no, 1 for yes)\",\n    obesity: \"Obesity (0 for no, 1 for yes)\",\n    exerciseHours: \"Exercise Hours per Week\"\n  };\n  const handleChange = (feature, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [feature]: Number(value)\n    }));\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setPrediction('');\n    try {\n      // Convert form data to features array in the correct order\n      const features = [formData.age, formData.gender, formData.bloodPressure, formData.cholesterol, formData.heartRate, formData.diabetes, formData.familyHistory, formData.smoking, formData.obesity, formData.exerciseHours];\n      const response = await axios.post('http://localhost:5000/predict', {\n        features\n      });\n      setPrediction(`Recommended Medicine: ${response.data.prediction}`);\n    } catch (error) {\n      if (error.response) {\n        setError(error.response.data.error || 'An error occurred while making the prediction.');\n      } else if (error.request) {\n        setError('No response from server. Please check if the backend is running.');\n      } else {\n        setError('Error occurred. Please check your input.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medicine Prediction System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [Object.entries(featureLabels).map(([feature, label]) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: feature,\n            children: [label, \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: feature,\n            type: \"number\",\n            value: formData[feature],\n            onChange: e => handleChange(feature, e.target.value),\n            min: feature === 'age' ? 0 : undefined,\n            max: feature === 'age' ? 120 : undefined,\n            step: ['gender', 'diabetes', 'familyHistory', 'smoking', 'obesity'].includes(feature) ? 1 : 'any'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, feature, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: loading ? 'loading' : '',\n          children: loading ? 'Predicting...' : 'Predict Medicine'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"prediction\",\n      children: prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RXjXvRXcHFgtuPFFfw9WfLhKNAI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","formData","setFormData","age","gender","bloodPressure","cholesterol","heartRate","diabetes","familyHistory","smoking","obesity","exerciseHours","prediction","setPrediction","error","setError","loading","setLoading","featureLabels","handleChange","feature","value","prev","Number","handleSubmit","e","preventDefault","features","response","post","data","request","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","Object","entries","map","label","htmlFor","id","type","onChange","target","min","undefined","max","step","includes","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vinay/Downloads/Medicine_Prediction_App_Complete/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    age: 0,\n    gender: 1, // 1 for male, 0 for female\n    bloodPressure: 120,\n    cholesterol: 200,\n    heartRate: 75,\n    diabetes: 0, // 0 for no, 1 for yes\n    familyHistory: 0, // 0 for no, 1 for yes\n    smoking: 0, // 0 for no, 1 for yes\n    obesity: 0, // 0 for no, 1 for yes\n    exerciseHours: 2\n  });\n\n  const [prediction, setPrediction] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const featureLabels = {\n    age: \"Age (years)\",\n    gender: \"Gender (1 for male, 0 for female)\",\n    bloodPressure: \"Blood Pressure (systolic)\",\n    cholesterol: \"Cholesterol Level (mg/dL)\",\n    heartRate: \"Heart Rate (bpm)\",\n    diabetes: \"Diabetes (0 for no, 1 for yes)\",\n    familyHistory: \"Family History (0 for no, 1 for yes)\",\n    smoking: \"Smoking (0 for no, 1 for yes)\",\n    obesity: \"Obesity (0 for no, 1 for yes)\",\n    exerciseHours: \"Exercise Hours per Week\"\n  };\n\n  const handleChange = (feature, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [feature]: Number(value)\n    }));\n    setError('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setPrediction('');\n\n    try {\n      // Convert form data to features array in the correct order\n      const features = [\n        formData.age,\n        formData.gender,\n        formData.bloodPressure,\n        formData.cholesterol,\n        formData.heartRate,\n        formData.diabetes,\n        formData.familyHistory,\n        formData.smoking,\n        formData.obesity,\n        formData.exerciseHours\n      ];\n\n      const response = await axios.post('http://localhost:5000/predict', { features });\n      setPrediction(`Recommended Medicine: ${response.data.prediction}`);\n    } catch (error) {\n      if (error.response) {\n        setError(error.response.data.error || 'An error occurred while making the prediction.');\n      } else if (error.request) {\n        setError('No response from server. Please check if the backend is running.');\n      } else {\n        setError('Error occurred. Please check your input.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Medicine Prediction System</h1>\n      <div className=\"form-container\">\n        <form onSubmit={handleSubmit}>\n          {Object.entries(featureLabels).map(([feature, label]) => (\n            <div key={feature} className=\"input-group\">\n              <label htmlFor={feature}>{label}:</label>\n              <input\n                id={feature}\n                type=\"number\"\n                value={formData[feature]}\n                onChange={(e) => handleChange(feature, e.target.value)}\n                min={feature === 'age' ? 0 : undefined}\n                max={feature === 'age' ? 120 : undefined}\n                step={['gender', 'diabetes', 'familyHistory', 'smoking', 'obesity'].includes(feature) ? 1 : 'any'}\n              />\n            </div>\n          ))}\n          <button \n            type=\"submit\" \n            disabled={loading}\n            className={loading ? 'loading' : ''}\n          >\n            {loading ? 'Predicting...' : 'Predict Medicine'}\n          </button>\n        </form>\n      </div>\n      {prediction && <p className=\"prediction\">{prediction}</p>}\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}