{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vinay\\\\Downloads\\\\Medicine_Prediction_App_Complete\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [formData, setFormData] = useState({\n    ageGroup: 'Adult',\n    // Child, Adult, Senior\n    itching: 0,\n    // 0: No, 1: Yes\n    nodalSkinEruptions: 0,\n    // 0: No, 1: Yes\n    shivering: 0,\n    // 0: No, 1: Yes\n    stomachPain: 0,\n    // 0: No, 1: Yes\n    vomiting: 0,\n    // 0: No, 1: Yes\n    chestPain: 0,\n    // 0: No, 1: Yes\n    lossOfAppetite: 0,\n    // 0: No, 1: Yes\n    yellowUrine: 0,\n    // 0: No, 1: Yes\n    restlessness: 0,\n    // 0: No, 1: Yes\n    excessiveHunger: 0,\n    // 0: No, 1: Yes\n    highFever: 0,\n    // 0: No, 1: Yes\n    diarrhoea: 0,\n    // 0: No, 1: Yes\n    redSpotsOverBody: 0,\n    // 0: No, 1: Yes\n    breathlessness: 0,\n    // 0: No, 1: Yes\n    darkUrine: 0,\n    // 0: No, 1: Yes\n    skinRash: 0,\n    // 0: No, 1: Yes\n    continuousSneezing: 0,\n    // 0: No, 1: Yes\n    chills: 0,\n    // 0: No, 1: Yes\n    ulcersOnTongue: 0,\n    // 0: No, 1: Yes\n    cough: 0,\n    // 0: No, 1: Yes\n    yellowishSkin: 0,\n    // 0: No, 1: Yes\n    abdominalPain: 0,\n    // 0: No, 1: Yes\n    weightLoss: 0,\n    // 0: No, 1: Yes\n    irregularSugarLevel: 0,\n    // 0: No, 1: Yes\n    increasedAppetite: 0,\n    // 0: No, 1: Yes\n    headache: 0,\n    // 0: No, 1: Yes\n    musclePain: 0,\n    // 0: No, 1: Yes\n    runnyNose: 0,\n    // 0: No, 1: Yes\n    fastHeartRate: 0,\n    // 0: No, 1: Yes\n    severity: 'Mild',\n    // Mild, Moderate, Severe\n    duration: 0,\n    // Duration in days\n    allergies: 'No',\n    // Yes, No\n    existingCondition: 'None' // None, Diabetes, Hypertension, Asthma\n  });\n  const [prediction, setPrediction] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n  const ageGroupOptions = [{\n    value: 'Child',\n    label: 'Child'\n  }, {\n    value: 'Adult',\n    label: 'Adult'\n  }, {\n    value: 'Senior',\n    label: 'Senior'\n  }];\n  const severityOptions = [{\n    value: 'Mild',\n    label: 'Mild'\n  }, {\n    value: 'Moderate',\n    label: 'Moderate'\n  }, {\n    value: 'Severe',\n    label: 'Severe'\n  }];\n  const allergiesOptions = [{\n    value: 'Yes',\n    label: 'Yes'\n  }, {\n    value: 'No',\n    label: 'No'\n  }];\n  const existingConditionOptions = [{\n    value: 'None',\n    label: 'None'\n  }, {\n    value: 'Diabetes',\n    label: 'Diabetes'\n  }, {\n    value: 'Hypertension',\n    label: 'Hypertension'\n  }, {\n    value: 'Asthma',\n    label: 'Asthma'\n  }];\n  const handleChange = (feature, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [feature]: value\n    }));\n    setError('');\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setPrediction('');\n    try {\n      // Check if all symptoms are \"No\"\n      const hasSymptoms = Object.entries(formData).filter(([key]) => key !== 'ageGroup' && key !== 'severity' && key !== 'duration' && key !== 'allergies' && key !== 'existingCondition').some(([_, value]) => value === 1);\n      if (!hasSymptoms) {\n        setPrediction('No specific medicines recommended as no symptoms are present.');\n        setLoading(false);\n        return;\n      }\n\n      // Convert form data to features array in the correct order\n      const features = [formData.ageGroup === 'Child' ? 0 : formData.ageGroup === 'Adult' ? 1 : 2,\n      // Convert age group to numeric\n      formData.itching, formData.nodalSkinEruptions, formData.shivering, formData.stomachPain, formData.vomiting, formData.chestPain, formData.lossOfAppetite, formData.yellowUrine, formData.restlessness, formData.excessiveHunger, formData.highFever, formData.diarrhoea, formData.redSpotsOverBody, formData.breathlessness, formData.darkUrine, formData.skinRash, formData.continuousSneezing, formData.chills, formData.ulcersOnTongue, formData.cough, formData.yellowishSkin, formData.abdominalPain, formData.weightLoss, formData.irregularSugarLevel, formData.increasedAppetite, formData.headache, formData.musclePain, formData.runnyNose, formData.fastHeartRate, formData.severity === 'Mild' ? 0 : formData.severity === 'Moderate' ? 1 : 2,\n      // Convert severity to numeric\n      formData.duration, formData.allergies === 'Yes' ? 1 : 0, formData.existingCondition === 'None' ? 0 : formData.existingCondition === 'Diabetes' ? 1 : formData.existingCondition === 'Hypertension' ? 2 : 3 // Convert existing condition to numeric\n      ];\n      const response = await axios.post('http://localhost:5000/predict', {\n        features\n      });\n      setPrediction(`Recommended Medicines: ${response.data.prediction}`);\n    } catch (error) {\n      if (error.response) {\n        setError(error.response.data.error || 'An error occurred while making the prediction.');\n      } else if (error.request) {\n        setError('No response from server. Please check if the backend is running.');\n      } else {\n        setError('Error occurred. Please check your input.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n  const renderToggleInput = (feature, label) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"toggle-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `toggle-button ${formData[feature] === 0 ? 'active' : ''}`,\n          onClick: () => handleChange(feature, 0),\n          children: \"No\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: `toggle-button ${formData[feature] === 1 ? 'active' : ''}`,\n          onClick: () => handleChange(feature, 1),\n          children: \"Yes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this);\n  };\n  const renderSelectInput = (feature, label, options) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"select-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: formData[feature],\n        onChange: e => handleChange(feature, e.target.value),\n        children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: option.value,\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  };\n  const renderNumberInput = (feature, label) => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: formData[feature],\n        onChange: e => handleChange(feature, Number(e.target.value)),\n        min: \"1\",\n        max: \"30\",\n        step: \"1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medicine Recommendation System\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Basic Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), renderSelectInput('ageGroup', 'Age Group', ageGroupOptions), renderSelectInput('severity', 'Severity', severityOptions), renderNumberInput('duration', 'Duration (days)'), renderSelectInput('allergies', 'Allergies', allergiesOptions), renderSelectInput('existingCondition', 'Existing Condition', existingConditionOptions)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-section\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Symptoms\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"symptoms-grid\",\n            children: [renderToggleInput('itching', 'Itching'), renderToggleInput('nodalSkinEruptions', 'Nodal Skin Eruptions'), renderToggleInput('shivering', 'Shivering'), renderToggleInput('stomachPain', 'Stomach Pain'), renderToggleInput('vomiting', 'Vomiting'), renderToggleInput('chestPain', 'Chest Pain'), renderToggleInput('lossOfAppetite', 'Loss of Appetite'), renderToggleInput('yellowUrine', 'Yellow Urine'), renderToggleInput('restlessness', 'Restlessness'), renderToggleInput('excessiveHunger', 'Excessive Hunger'), renderToggleInput('highFever', 'High Fever'), renderToggleInput('diarrhoea', 'Diarrhoea'), renderToggleInput('redSpotsOverBody', 'Red Spots Over Body'), renderToggleInput('breathlessness', 'Breathlessness'), renderToggleInput('darkUrine', 'Dark Urine'), renderToggleInput('skinRash', 'Skin Rash'), renderToggleInput('continuousSneezing', 'Continuous Sneezing'), renderToggleInput('chills', 'Chills'), renderToggleInput('ulcersOnTongue', 'Ulcers on Tongue'), renderToggleInput('cough', 'Cough'), renderToggleInput('yellowishSkin', 'Yellowish Skin'), renderToggleInput('abdominalPain', 'Abdominal Pain'), renderToggleInput('weightLoss', 'Weight Loss'), renderToggleInput('irregularSugarLevel', 'Irregular Sugar Level'), renderToggleInput('increasedAppetite', 'Increased Appetite'), renderToggleInput('headache', 'Headache'), renderToggleInput('musclePain', 'Muscle Pain'), renderToggleInput('runnyNose', 'Runny Nose'), renderToggleInput('fastHeartRate', 'Fast Heart Rate')]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: loading ? 'loading' : '',\n          children: loading ? 'Analyzing Symptoms...' : 'Recommend Medicines'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"prediction\",\n      children: prediction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 22\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MR8BKSXl3PnmrNUGoMCWfyJ4Y2Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","formData","setFormData","ageGroup","itching","nodalSkinEruptions","shivering","stomachPain","vomiting","chestPain","lossOfAppetite","yellowUrine","restlessness","excessiveHunger","highFever","diarrhoea","redSpotsOverBody","breathlessness","darkUrine","skinRash","continuousSneezing","chills","ulcersOnTongue","cough","yellowishSkin","abdominalPain","weightLoss","irregularSugarLevel","increasedAppetite","headache","musclePain","runnyNose","fastHeartRate","severity","duration","allergies","existingCondition","prediction","setPrediction","error","setError","loading","setLoading","ageGroupOptions","value","label","severityOptions","allergiesOptions","existingConditionOptions","handleChange","feature","prev","handleSubmit","e","preventDefault","hasSymptoms","Object","entries","filter","key","some","_","features","response","post","data","request","renderToggleInput","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","renderSelectInput","options","onChange","target","map","option","renderNumberInput","Number","min","max","step","onSubmit","disabled","_c","$RefreshReg$"],"sources":["C:/Users/vinay/Downloads/Medicine_Prediction_App_Complete/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [formData, setFormData] = useState({\n    ageGroup: 'Adult',  // Child, Adult, Senior\n    itching: 0,         // 0: No, 1: Yes\n    nodalSkinEruptions: 0, // 0: No, 1: Yes\n    shivering: 0,       // 0: No, 1: Yes\n    stomachPain: 0,     // 0: No, 1: Yes\n    vomiting: 0,        // 0: No, 1: Yes\n    chestPain: 0,       // 0: No, 1: Yes\n    lossOfAppetite: 0,  // 0: No, 1: Yes\n    yellowUrine: 0,     // 0: No, 1: Yes\n    restlessness: 0,    // 0: No, 1: Yes\n    excessiveHunger: 0, // 0: No, 1: Yes\n    highFever: 0,       // 0: No, 1: Yes\n    diarrhoea: 0,       // 0: No, 1: Yes\n    redSpotsOverBody: 0, // 0: No, 1: Yes\n    breathlessness: 0,  // 0: No, 1: Yes\n    darkUrine: 0,       // 0: No, 1: Yes\n    skinRash: 0,        // 0: No, 1: Yes\n    continuousSneezing: 0, // 0: No, 1: Yes\n    chills: 0,          // 0: No, 1: Yes\n    ulcersOnTongue: 0,  // 0: No, 1: Yes\n    cough: 0,           // 0: No, 1: Yes\n    yellowishSkin: 0,   // 0: No, 1: Yes\n    abdominalPain: 0,   // 0: No, 1: Yes\n    weightLoss: 0,      // 0: No, 1: Yes\n    irregularSugarLevel: 0, // 0: No, 1: Yes\n    increasedAppetite: 0, // 0: No, 1: Yes\n    headache: 0,        // 0: No, 1: Yes\n    musclePain: 0,      // 0: No, 1: Yes\n    runnyNose: 0,       // 0: No, 1: Yes\n    fastHeartRate: 0,   // 0: No, 1: Yes\n    severity: 'Mild',   // Mild, Moderate, Severe\n    duration: 0,        // Duration in days\n    allergies: 'No',    // Yes, No\n    existingCondition: 'None' // None, Diabetes, Hypertension, Asthma\n  });\n\n  const [prediction, setPrediction] = useState('');\n  const [error, setError] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const ageGroupOptions = [\n    { value: 'Child', label: 'Child' },\n    { value: 'Adult', label: 'Adult' },\n    { value: 'Senior', label: 'Senior' }\n  ];\n\n  const severityOptions = [\n    { value: 'Mild', label: 'Mild' },\n    { value: 'Moderate', label: 'Moderate' },\n    { value: 'Severe', label: 'Severe' }\n  ];\n\n  const allergiesOptions = [\n    { value: 'Yes', label: 'Yes' },\n    { value: 'No', label: 'No' }\n  ];\n\n  const existingConditionOptions = [\n    { value: 'None', label: 'None' },\n    { value: 'Diabetes', label: 'Diabetes' },\n    { value: 'Hypertension', label: 'Hypertension' },\n    { value: 'Asthma', label: 'Asthma' }\n  ];\n\n  const handleChange = (feature, value) => {\n    setFormData(prev => ({\n      ...prev,\n      [feature]: value\n    }));\n    setError('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    setPrediction('');\n\n    try {\n      // Check if all symptoms are \"No\"\n      const hasSymptoms = Object.entries(formData)\n        .filter(([key]) => key !== 'ageGroup' && key !== 'severity' && key !== 'duration' && key !== 'allergies' && key !== 'existingCondition')\n        .some(([_, value]) => value === 1);\n\n      if (!hasSymptoms) {\n        setPrediction('No specific medicines recommended as no symptoms are present.');\n        setLoading(false);\n        return;\n      }\n\n      // Convert form data to features array in the correct order\n      const features = [\n        formData.ageGroup === 'Child' ? 0 : formData.ageGroup === 'Adult' ? 1 : 2, // Convert age group to numeric\n        formData.itching,\n        formData.nodalSkinEruptions,\n        formData.shivering,\n        formData.stomachPain,\n        formData.vomiting,\n        formData.chestPain,\n        formData.lossOfAppetite,\n        formData.yellowUrine,\n        formData.restlessness,\n        formData.excessiveHunger,\n        formData.highFever,\n        formData.diarrhoea,\n        formData.redSpotsOverBody,\n        formData.breathlessness,\n        formData.darkUrine,\n        formData.skinRash,\n        formData.continuousSneezing,\n        formData.chills,\n        formData.ulcersOnTongue,\n        formData.cough,\n        formData.yellowishSkin,\n        formData.abdominalPain,\n        formData.weightLoss,\n        formData.irregularSugarLevel,\n        formData.increasedAppetite,\n        formData.headache,\n        formData.musclePain,\n        formData.runnyNose,\n        formData.fastHeartRate,\n        formData.severity === 'Mild' ? 0 : formData.severity === 'Moderate' ? 1 : 2, // Convert severity to numeric\n        formData.duration,\n        formData.allergies === 'Yes' ? 1 : 0,\n        formData.existingCondition === 'None' ? 0 : \n        formData.existingCondition === 'Diabetes' ? 1 :\n        formData.existingCondition === 'Hypertension' ? 2 : 3 // Convert existing condition to numeric\n      ];\n\n      const response = await axios.post('http://localhost:5000/predict', { features });\n      setPrediction(`Recommended Medicines: ${response.data.prediction}`);\n    } catch (error) {\n      if (error.response) {\n        setError(error.response.data.error || 'An error occurred while making the prediction.');\n      } else if (error.request) {\n        setError('No response from server. Please check if the backend is running.');\n      } else {\n        setError('Error occurred. Please check your input.');\n      }\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderToggleInput = (feature, label) => {\n    return (\n      <div className=\"toggle-group\">\n        <label>{label}</label>\n        <div className=\"toggle-buttons\">\n          <button\n            type=\"button\"\n            className={`toggle-button ${formData[feature] === 0 ? 'active' : ''}`}\n            onClick={() => handleChange(feature, 0)}\n          >\n            No\n          </button>\n          <button\n            type=\"button\"\n            className={`toggle-button ${formData[feature] === 1 ? 'active' : ''}`}\n            onClick={() => handleChange(feature, 1)}\n          >\n            Yes\n          </button>\n        </div>\n      </div>\n    );\n  };\n\n  const renderSelectInput = (feature, label, options) => {\n    return (\n      <div className=\"select-group\">\n        <label>{label}</label>\n        <select\n          value={formData[feature]}\n          onChange={(e) => handleChange(feature, e.target.value)}\n        >\n          {options.map(option => (\n            <option key={option.value} value={option.value}>\n              {option.label}\n            </option>\n          ))}\n        </select>\n      </div>\n    );\n  };\n\n  const renderNumberInput = (feature, label) => {\n    return (\n      <div className=\"number-group\">\n        <label>{label}</label>\n        <input\n          type=\"number\"\n          value={formData[feature]}\n          onChange={(e) => handleChange(feature, Number(e.target.value))}\n          min=\"1\"\n          max=\"30\"\n          step=\"1\"\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Medicine Recommendation System</h1>\n      <div className=\"form-container\">\n        <form onSubmit={handleSubmit}>\n          <div className=\"form-section\">\n            <h2>Basic Information</h2>\n            {renderSelectInput('ageGroup', 'Age Group', ageGroupOptions)}\n            {renderSelectInput('severity', 'Severity', severityOptions)}\n            {renderNumberInput('duration', 'Duration (days)')}\n            {renderSelectInput('allergies', 'Allergies', allergiesOptions)}\n            {renderSelectInput('existingCondition', 'Existing Condition', existingConditionOptions)}\n          </div>\n\n          <div className=\"form-section\">\n            <h2>Symptoms</h2>\n            <div className=\"symptoms-grid\">\n              {renderToggleInput('itching', 'Itching')}\n              {renderToggleInput('nodalSkinEruptions', 'Nodal Skin Eruptions')}\n              {renderToggleInput('shivering', 'Shivering')}\n              {renderToggleInput('stomachPain', 'Stomach Pain')}\n              {renderToggleInput('vomiting', 'Vomiting')}\n              {renderToggleInput('chestPain', 'Chest Pain')}\n              {renderToggleInput('lossOfAppetite', 'Loss of Appetite')}\n              {renderToggleInput('yellowUrine', 'Yellow Urine')}\n              {renderToggleInput('restlessness', 'Restlessness')}\n              {renderToggleInput('excessiveHunger', 'Excessive Hunger')}\n              {renderToggleInput('highFever', 'High Fever')}\n              {renderToggleInput('diarrhoea', 'Diarrhoea')}\n              {renderToggleInput('redSpotsOverBody', 'Red Spots Over Body')}\n              {renderToggleInput('breathlessness', 'Breathlessness')}\n              {renderToggleInput('darkUrine', 'Dark Urine')}\n              {renderToggleInput('skinRash', 'Skin Rash')}\n              {renderToggleInput('continuousSneezing', 'Continuous Sneezing')}\n              {renderToggleInput('chills', 'Chills')}\n              {renderToggleInput('ulcersOnTongue', 'Ulcers on Tongue')}\n              {renderToggleInput('cough', 'Cough')}\n              {renderToggleInput('yellowishSkin', 'Yellowish Skin')}\n              {renderToggleInput('abdominalPain', 'Abdominal Pain')}\n              {renderToggleInput('weightLoss', 'Weight Loss')}\n              {renderToggleInput('irregularSugarLevel', 'Irregular Sugar Level')}\n              {renderToggleInput('increasedAppetite', 'Increased Appetite')}\n              {renderToggleInput('headache', 'Headache')}\n              {renderToggleInput('musclePain', 'Muscle Pain')}\n              {renderToggleInput('runnyNose', 'Runny Nose')}\n              {renderToggleInput('fastHeartRate', 'Fast Heart Rate')}\n            </div>\n          </div>\n\n          <button \n            type=\"submit\" \n            disabled={loading}\n            className={loading ? 'loading' : ''}\n          >\n            {loading ? 'Analyzing Symptoms...' : 'Recommend Medicines'}\n          </button>\n        </form>\n      </div>\n      {prediction && <p className=\"prediction\">{prediction}</p>}\n      {error && <p className=\"error-message\">{error}</p>}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,QAAQ,EAAE,OAAO;IAAG;IACpBC,OAAO,EAAE,CAAC;IAAU;IACpBC,kBAAkB,EAAE,CAAC;IAAE;IACvBC,SAAS,EAAE,CAAC;IAAQ;IACpBC,WAAW,EAAE,CAAC;IAAM;IACpBC,QAAQ,EAAE,CAAC;IAAS;IACpBC,SAAS,EAAE,CAAC;IAAQ;IACpBC,cAAc,EAAE,CAAC;IAAG;IACpBC,WAAW,EAAE,CAAC;IAAM;IACpBC,YAAY,EAAE,CAAC;IAAK;IACpBC,eAAe,EAAE,CAAC;IAAE;IACpBC,SAAS,EAAE,CAAC;IAAQ;IACpBC,SAAS,EAAE,CAAC;IAAQ;IACpBC,gBAAgB,EAAE,CAAC;IAAE;IACrBC,cAAc,EAAE,CAAC;IAAG;IACpBC,SAAS,EAAE,CAAC;IAAQ;IACpBC,QAAQ,EAAE,CAAC;IAAS;IACpBC,kBAAkB,EAAE,CAAC;IAAE;IACvBC,MAAM,EAAE,CAAC;IAAW;IACpBC,cAAc,EAAE,CAAC;IAAG;IACpBC,KAAK,EAAE,CAAC;IAAY;IACpBC,aAAa,EAAE,CAAC;IAAI;IACpBC,aAAa,EAAE,CAAC;IAAI;IACpBC,UAAU,EAAE,CAAC;IAAO;IACpBC,mBAAmB,EAAE,CAAC;IAAE;IACxBC,iBAAiB,EAAE,CAAC;IAAE;IACtBC,QAAQ,EAAE,CAAC;IAAS;IACpBC,UAAU,EAAE,CAAC;IAAO;IACpBC,SAAS,EAAE,CAAC;IAAQ;IACpBC,aAAa,EAAE,CAAC;IAAI;IACpBC,QAAQ,EAAE,MAAM;IAAI;IACpBC,QAAQ,EAAE,CAAC;IAAS;IACpBC,SAAS,EAAE,IAAI;IAAK;IACpBC,iBAAiB,EAAE,MAAM,CAAC;EAC5B,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAAC4C,KAAK,EAAEC,QAAQ,CAAC,GAAG7C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8C,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMgD,eAAe,GAAG,CACtB;IAAEC,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAQ,CAAC,EAClC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,CACrC;EAED,MAAMC,eAAe,GAAG,CACtB;IAAEF,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,EACxC;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,CACrC;EAED,MAAME,gBAAgB,GAAG,CACvB;IAAEH,KAAK,EAAE,KAAK;IAAEC,KAAK,EAAE;EAAM,CAAC,EAC9B;IAAED,KAAK,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,CAC7B;EAED,MAAMG,wBAAwB,GAAG,CAC/B;IAAEJ,KAAK,EAAE,MAAM;IAAEC,KAAK,EAAE;EAAO,CAAC,EAChC;IAAED,KAAK,EAAE,UAAU;IAAEC,KAAK,EAAE;EAAW,CAAC,EACxC;IAAED,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAE;EAAe,CAAC,EAChD;IAAED,KAAK,EAAE,QAAQ;IAAEC,KAAK,EAAE;EAAS,CAAC,CACrC;EAED,MAAMI,YAAY,GAAGA,CAACC,OAAO,EAAEN,KAAK,KAAK;IACvC1C,WAAW,CAACiD,IAAI,KAAK;MACnB,GAAGA,IAAI;MACP,CAACD,OAAO,GAAGN;IACb,CAAC,CAAC,CAAC;IACHJ,QAAQ,CAAC,EAAE,CAAC;EACd,CAAC;EAED,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBZ,UAAU,CAAC,IAAI,CAAC;IAChBF,QAAQ,CAAC,EAAE,CAAC;IACZF,aAAa,CAAC,EAAE,CAAC;IAEjB,IAAI;MACF;MACA,MAAMiB,WAAW,GAAGC,MAAM,CAACC,OAAO,CAACxD,QAAQ,CAAC,CACzCyD,MAAM,CAAC,CAAC,CAACC,GAAG,CAAC,KAAKA,GAAG,KAAK,UAAU,IAAIA,GAAG,KAAK,UAAU,IAAIA,GAAG,KAAK,UAAU,IAAIA,GAAG,KAAK,WAAW,IAAIA,GAAG,KAAK,mBAAmB,CAAC,CACvIC,IAAI,CAAC,CAAC,CAACC,CAAC,EAAEjB,KAAK,CAAC,KAAKA,KAAK,KAAK,CAAC,CAAC;MAEpC,IAAI,CAACW,WAAW,EAAE;QAChBjB,aAAa,CAAC,+DAA+D,CAAC;QAC9EI,UAAU,CAAC,KAAK,CAAC;QACjB;MACF;;MAEA;MACA,MAAMoB,QAAQ,GAAG,CACf7D,QAAQ,CAACE,QAAQ,KAAK,OAAO,GAAG,CAAC,GAAGF,QAAQ,CAACE,QAAQ,KAAK,OAAO,GAAG,CAAC,GAAG,CAAC;MAAE;MAC3EF,QAAQ,CAACG,OAAO,EAChBH,QAAQ,CAACI,kBAAkB,EAC3BJ,QAAQ,CAACK,SAAS,EAClBL,QAAQ,CAACM,WAAW,EACpBN,QAAQ,CAACO,QAAQ,EACjBP,QAAQ,CAACQ,SAAS,EAClBR,QAAQ,CAACS,cAAc,EACvBT,QAAQ,CAACU,WAAW,EACpBV,QAAQ,CAACW,YAAY,EACrBX,QAAQ,CAACY,eAAe,EACxBZ,QAAQ,CAACa,SAAS,EAClBb,QAAQ,CAACc,SAAS,EAClBd,QAAQ,CAACe,gBAAgB,EACzBf,QAAQ,CAACgB,cAAc,EACvBhB,QAAQ,CAACiB,SAAS,EAClBjB,QAAQ,CAACkB,QAAQ,EACjBlB,QAAQ,CAACmB,kBAAkB,EAC3BnB,QAAQ,CAACoB,MAAM,EACfpB,QAAQ,CAACqB,cAAc,EACvBrB,QAAQ,CAACsB,KAAK,EACdtB,QAAQ,CAACuB,aAAa,EACtBvB,QAAQ,CAACwB,aAAa,EACtBxB,QAAQ,CAACyB,UAAU,EACnBzB,QAAQ,CAAC0B,mBAAmB,EAC5B1B,QAAQ,CAAC2B,iBAAiB,EAC1B3B,QAAQ,CAAC4B,QAAQ,EACjB5B,QAAQ,CAAC6B,UAAU,EACnB7B,QAAQ,CAAC8B,SAAS,EAClB9B,QAAQ,CAAC+B,aAAa,EACtB/B,QAAQ,CAACgC,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAGhC,QAAQ,CAACgC,QAAQ,KAAK,UAAU,GAAG,CAAC,GAAG,CAAC;MAAE;MAC7EhC,QAAQ,CAACiC,QAAQ,EACjBjC,QAAQ,CAACkC,SAAS,KAAK,KAAK,GAAG,CAAC,GAAG,CAAC,EACpClC,QAAQ,CAACmC,iBAAiB,KAAK,MAAM,GAAG,CAAC,GACzCnC,QAAQ,CAACmC,iBAAiB,KAAK,UAAU,GAAG,CAAC,GAC7CnC,QAAQ,CAACmC,iBAAiB,KAAK,cAAc,GAAG,CAAC,GAAG,CAAC,CAAC;MAAA,CACvD;MAED,MAAM2B,QAAQ,GAAG,MAAMnE,KAAK,CAACoE,IAAI,CAAC,+BAA+B,EAAE;QAAEF;MAAS,CAAC,CAAC;MAChFxB,aAAa,CAAC,0BAA0ByB,QAAQ,CAACE,IAAI,CAAC5B,UAAU,EAAE,CAAC;IACrE,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,IAAIA,KAAK,CAACwB,QAAQ,EAAE;QAClBvB,QAAQ,CAACD,KAAK,CAACwB,QAAQ,CAACE,IAAI,CAAC1B,KAAK,IAAI,gDAAgD,CAAC;MACzF,CAAC,MAAM,IAAIA,KAAK,CAAC2B,OAAO,EAAE;QACxB1B,QAAQ,CAAC,kEAAkE,CAAC;MAC9E,CAAC,MAAM;QACLA,QAAQ,CAAC,0CAA0C,CAAC;MACtD;IACF,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMyB,iBAAiB,GAAGA,CAACjB,OAAO,EAAEL,KAAK,KAAK;IAC5C,oBACE/C,OAAA;MAAKsE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvE,OAAA;QAAAuE,QAAA,EAAQxB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtB3E,OAAA;QAAKsE,SAAS,EAAC,gBAAgB;QAAAC,QAAA,gBAC7BvE,OAAA;UACE4E,IAAI,EAAC,QAAQ;UACbN,SAAS,EAAE,iBAAiBnE,QAAQ,CAACiD,OAAO,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;UACtEyB,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACC,OAAO,EAAE,CAAC,CAAE;UAAAmB,QAAA,EACzC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eACT3E,OAAA;UACE4E,IAAI,EAAC,QAAQ;UACbN,SAAS,EAAE,iBAAiBnE,QAAQ,CAACiD,OAAO,CAAC,KAAK,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;UACtEyB,OAAO,EAAEA,CAAA,KAAM1B,YAAY,CAACC,OAAO,EAAE,CAAC,CAAE;UAAAmB,QAAA,EACzC;QAED;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAEV,CAAC;EAED,MAAMG,iBAAiB,GAAGA,CAAC1B,OAAO,EAAEL,KAAK,EAAEgC,OAAO,KAAK;IACrD,oBACE/E,OAAA;MAAKsE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvE,OAAA;QAAAuE,QAAA,EAAQxB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtB3E,OAAA;QACE8C,KAAK,EAAE3C,QAAQ,CAACiD,OAAO,CAAE;QACzB4B,QAAQ,EAAGzB,CAAC,IAAKJ,YAAY,CAACC,OAAO,EAAEG,CAAC,CAAC0B,MAAM,CAACnC,KAAK,CAAE;QAAAyB,QAAA,EAEtDQ,OAAO,CAACG,GAAG,CAACC,MAAM,iBACjBnF,OAAA;UAA2B8C,KAAK,EAAEqC,MAAM,CAACrC,KAAM;UAAAyB,QAAA,EAC5CY,MAAM,CAACpC;QAAK,GADFoC,MAAM,CAACrC,KAAK;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEjB,CACT;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAEV,CAAC;EAED,MAAMS,iBAAiB,GAAGA,CAAChC,OAAO,EAAEL,KAAK,KAAK;IAC5C,oBACE/C,OAAA;MAAKsE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BvE,OAAA;QAAAuE,QAAA,EAAQxB;MAAK;QAAAyB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eACtB3E,OAAA;QACE4E,IAAI,EAAC,QAAQ;QACb9B,KAAK,EAAE3C,QAAQ,CAACiD,OAAO,CAAE;QACzB4B,QAAQ,EAAGzB,CAAC,IAAKJ,YAAY,CAACC,OAAO,EAAEiC,MAAM,CAAC9B,CAAC,CAAC0B,MAAM,CAACnC,KAAK,CAAC,CAAE;QAC/DwC,GAAG,EAAC,GAAG;QACPC,GAAG,EAAC,IAAI;QACRC,IAAI,EAAC;MAAG;QAAAhB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAEV,CAAC;EAED,oBACE3E,OAAA;IAAKsE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvE,OAAA;MAAAuE,QAAA,EAAI;IAA8B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvC3E,OAAA;MAAKsE,SAAS,EAAC,gBAAgB;MAAAC,QAAA,eAC7BvE,OAAA;QAAMyF,QAAQ,EAAEnC,YAAa;QAAAiB,QAAA,gBAC3BvE,OAAA;UAAKsE,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BvE,OAAA;YAAAuE,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACzBG,iBAAiB,CAAC,UAAU,EAAE,WAAW,EAAEjC,eAAe,CAAC,EAC3DiC,iBAAiB,CAAC,UAAU,EAAE,UAAU,EAAE9B,eAAe,CAAC,EAC1DoC,iBAAiB,CAAC,UAAU,EAAE,iBAAiB,CAAC,EAChDN,iBAAiB,CAAC,WAAW,EAAE,WAAW,EAAE7B,gBAAgB,CAAC,EAC7D6B,iBAAiB,CAAC,mBAAmB,EAAE,oBAAoB,EAAE5B,wBAAwB,CAAC;QAAA;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpF,CAAC,eAEN3E,OAAA;UAAKsE,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BvE,OAAA;YAAAuE,QAAA,EAAI;UAAQ;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjB3E,OAAA;YAAKsE,SAAS,EAAC,eAAe;YAAAC,QAAA,GAC3BF,iBAAiB,CAAC,SAAS,EAAE,SAAS,CAAC,EACvCA,iBAAiB,CAAC,oBAAoB,EAAE,sBAAsB,CAAC,EAC/DA,iBAAiB,CAAC,WAAW,EAAE,WAAW,CAAC,EAC3CA,iBAAiB,CAAC,aAAa,EAAE,cAAc,CAAC,EAChDA,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC,EACzCA,iBAAiB,CAAC,WAAW,EAAE,YAAY,CAAC,EAC5CA,iBAAiB,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,EACvDA,iBAAiB,CAAC,aAAa,EAAE,cAAc,CAAC,EAChDA,iBAAiB,CAAC,cAAc,EAAE,cAAc,CAAC,EACjDA,iBAAiB,CAAC,iBAAiB,EAAE,kBAAkB,CAAC,EACxDA,iBAAiB,CAAC,WAAW,EAAE,YAAY,CAAC,EAC5CA,iBAAiB,CAAC,WAAW,EAAE,WAAW,CAAC,EAC3CA,iBAAiB,CAAC,kBAAkB,EAAE,qBAAqB,CAAC,EAC5DA,iBAAiB,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,EACrDA,iBAAiB,CAAC,WAAW,EAAE,YAAY,CAAC,EAC5CA,iBAAiB,CAAC,UAAU,EAAE,WAAW,CAAC,EAC1CA,iBAAiB,CAAC,oBAAoB,EAAE,qBAAqB,CAAC,EAC9DA,iBAAiB,CAAC,QAAQ,EAAE,QAAQ,CAAC,EACrCA,iBAAiB,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,EACvDA,iBAAiB,CAAC,OAAO,EAAE,OAAO,CAAC,EACnCA,iBAAiB,CAAC,eAAe,EAAE,gBAAgB,CAAC,EACpDA,iBAAiB,CAAC,eAAe,EAAE,gBAAgB,CAAC,EACpDA,iBAAiB,CAAC,YAAY,EAAE,aAAa,CAAC,EAC9CA,iBAAiB,CAAC,qBAAqB,EAAE,uBAAuB,CAAC,EACjEA,iBAAiB,CAAC,mBAAmB,EAAE,oBAAoB,CAAC,EAC5DA,iBAAiB,CAAC,UAAU,EAAE,UAAU,CAAC,EACzCA,iBAAiB,CAAC,YAAY,EAAE,aAAa,CAAC,EAC9CA,iBAAiB,CAAC,WAAW,EAAE,YAAY,CAAC,EAC5CA,iBAAiB,CAAC,eAAe,EAAE,iBAAiB,CAAC;UAAA;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACnD,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eAEN3E,OAAA;UACE4E,IAAI,EAAC,QAAQ;UACbc,QAAQ,EAAE/C,OAAQ;UAClB2B,SAAS,EAAE3B,OAAO,GAAG,SAAS,GAAG,EAAG;UAAA4B,QAAA,EAEnC5B,OAAO,GAAG,uBAAuB,GAAG;QAAqB;UAAA6B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,EACLpC,UAAU,iBAAIvC,OAAA;MAAGsE,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAEhC;IAAU;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACxDlC,KAAK,iBAAIzC,OAAA;MAAGsE,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE9B;IAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV;AAACzE,EAAA,CA3QQD,GAAG;AAAA0F,EAAA,GAAH1F,GAAG;AA6QZ,eAAeA,GAAG;AAAC,IAAA0F,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}